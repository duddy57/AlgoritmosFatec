{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/duddy57/AlgoritmosFatec/blob/main/Atividade05-11-2024\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1- Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inválido e continue pedindo até que o usuário informe um valor válido."
      ],
      "metadata": {
        "id": "4BHkhl1eO0V4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = int(input(\"Digite uma nota entre 0 e 10:  \"))\n",
        "\n",
        "while n1 < 0 or n1 > 10:\n",
        "  print(\"Nota invalida\")\n",
        "  n1 = int(input(\"Digite uma nota entre 0 e 10:  \"))\n",
        "  if n1 >= 0 and n1 <= 10:\n",
        "    print(\"Nota valida\")\n",
        "    break\n",
        "\n",
        "print(\"Nota valida\")\n"
      ],
      "metadata": {
        "id": "4aR8eWjyO20P",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "52d1546f-8588-49f2-c683-e059aa99dbee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite uma nota entre 0 e 10:  12\n",
            "Nota invalida\n",
            "Digite uma nota entre 0 e 10:  12\n",
            "Nota invalida\n",
            "Digite uma nota entre 0 e 10:  10\n",
            "Nota valida\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2- Faça um programa que leia um nome de usuário e a sua senha e não aceite a senha igual ao nome do usuário, mostrando uma mensagem de erro e voltando a pedir as informações."
      ],
      "metadata": {
        "id": "8xLNyx3vO6__"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "nome = input(\"Digite seu nome:  \")\n",
        "senha = input(\"Digite sua senha:  \")\n",
        "\n",
        "while nome == senha:\n",
        "  print(\"A senha não pode ser igual ao nome\")\n",
        "  nome = input(\"Digite seu nome:  \")\n",
        "  senha = input(\"Digite sua senha:  \")\n",
        "  if nome != senha:\n",
        "    print(\"Senha e nome validos\")\n",
        "    break\n",
        "\n",
        "print(\"Senha e nome validos\")"
      ],
      "metadata": {
        "id": "x21IQbJqPDtI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d7c6228c-4e77-4d36-f473-c3020e439c63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite seu nome:  123\n",
            "Digite sua senha:  1222\n",
            "Senha e nome validos\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3- Faça um programa que leia e valide as seguintes informações:\n",
        "*   Nome: maior que 3 caracteres;\n",
        "*   Idade: entre 0 e 150;\n",
        "*   Salário: maior que zero;\n",
        "*   Sexo: 'f' ou 'm';\n",
        "*   Estado Civil: 's', 'c', 'v', 'd';\n",
        "\n",
        "Use a função **len(string)** para saber o tamanho de um texto (número de caracteres).\n"
      ],
      "metadata": {
        "id": "l24MnOXFPG7n"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = input(\"Digite seu nome:  \")\n",
        "while len(n) < 3:\n",
        "  print(\"Nome invalido\")\n",
        "  n = input(\"Digite seu nome:  \")\n",
        "  if len(n) >= 3:\n",
        "    break\n",
        "print(\"Nome valido\")\n",
        "\n",
        "i = int(input(\"Digite sua idade:  \"))\n",
        "while i <= 0 and i >= 150 :\n",
        "  print(\"Idade invalida\")\n",
        "  n = input(\"Digite sua idade:  \")\n",
        "  if i > 0 and i < 150:\n",
        "    break\n",
        "print(\"Idade valida\")\n",
        "\n",
        "\n",
        "s = float(input(\"Digite seu salario:  \"))\n",
        "while s < 0:\n",
        "  print(\"Salario invalido\")\n",
        "  n = input(\"Digite seu Salario:  \")\n",
        "  if s > 0:\n",
        "    break\n",
        "print(\"Salario Valido\")\n",
        "\n",
        "se = input(\"Digite seu sexo:  \")\n",
        "while se != 'f' and se != 'm' :\n",
        "  print(\"Sexo invalido\")\n",
        "  se = input(\"Digite seu sexo:  \")\n",
        "  if se == 'f' and se == 'm':\n",
        "    break\n",
        "print(\"Sexo valido\")\n",
        "\n",
        "ec = input(\"Digite seu estado civil:  \")\n",
        "while ec != 'c' and ec != 'v' and ec != 's' and ec != 'd':\n",
        "  print(\"Estado civil invalido\")\n",
        "  se = input(\"Digite seu estado civil:  \")\n",
        "  if ec == 'c' and ec == 'v' and ec == 's' and ec == 'd':\n",
        "    break\n",
        "print(\"Estado civil valido\")\n"
      ],
      "metadata": {
        "id": "w28p4gJ8Pc2b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5a5ff0ec-0d8b-462c-e548-af700d555d20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite seu nome:  a\n",
            "Nome invalido\n",
            "Digite seu nome:  Alex\n",
            "Nome valido\n",
            "Digite sua idade:  0\n",
            "Idade valida\n",
            "Digite seu salario:  1300\n",
            "Salario Valido\n",
            "Digite seu sexo:  b\n",
            "Sexo invalido\n",
            "Digite seu sexo:  m\n",
            "Sexo valido\n",
            "Digite seu estado civil:  d\n",
            "Estado civil valido\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "4- Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Faça um programa que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento."
      ],
      "metadata": {
        "id": "8WpDFV0uP1DX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "A = 80000\n",
        "B = 200000\n",
        "\n",
        "\n",
        "ano = 0\n",
        "\n",
        "while A < B:\n",
        "  A = A + (A * 0.03)\n",
        "  B = B + (B * 0.015)\n",
        "  ano += 1\n",
        "  if A >= B:\n",
        "    print(\"Ano: \", ano)\n",
        "    print(\"População A: \", A)\n",
        "    print(\"População B: \", B)\n",
        "    print(\"A população A precisa de:\", ano, \"anos para ultrapassar a população B\")\n",
        "    break"
      ],
      "metadata": {
        "id": "Qszzk46vzGoS",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "64839e4f-06f0-4df2-b097-a20426bc3b15"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ano:  63\n",
            "População A:  515033.10280596686\n",
            "População B:  510964.41696222295\n",
            "A população A precisa de: 63 anos para ultrapassar a população B\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "5- Altere o programa anterior permitindo ao usuário informar as populações e as taxas de crescimento iniciais. Valide a entrada e permita repetir a operação."
      ],
      "metadata": {
        "id": "GaMiWS9DP-zf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "A = int(input(\"Digite a população da população A:  \"))\n",
        "B = int(input(\"Digite a população da população B:  \"))\n",
        "TA = float(input(\"Digite a taxa de crescimento da população A:  \"))\n",
        "TB = float(input(\"Digite a taxa de crescimento da população B:  \"))\n",
        "ano = 0\n",
        "\n",
        "while A < B:\n",
        "  A = A * (1 + (TA/100))\n",
        "  B = B * (1 + (TB/100))\n",
        "  ano += 1\n",
        "  if A >= B:\n",
        "    print(\"Ano: \", ano)\n",
        "    print(\"População A: \", A)\n",
        "    print(\"População B: \", B)\n",
        "    print(\"A população A precisa de:\", ano, \"anos para ultrapassar a população B\")\n",
        "    break"
      ],
      "metadata": {
        "id": "ibOa9dT0P5iD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "81ac90ac-357e-4f48-d166-8cafe33c6177"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a população da população A:  8000\n",
            "Digite a população da população B:  20000\n",
            "Digite a taxa de crescimento da população A:  3\n",
            "Digite a taxa de crescimento da população B:  1.5\n",
            "Ano:  63\n",
            "População A:  51503.310280596765\n",
            "População B:  51096.44169622198\n",
            "A população A precisa de: 63 anos para ultrapassar a população B\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6- Faça um programa que imprima na tela os números de 1 a 20, um abaixo do outro. Depois modifique o programa para que ele mostre os números um ao lado do outro."
      ],
      "metadata": {
        "id": "HF_S1CYWQG1v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "s = input(\"Digite um 1 para começa:  \")\n",
        "\n",
        "while s != '1':\n",
        "  print(\"Opção invalida\")\n",
        "  s = input(\"Digite um 1 para começa:  \")\n",
        "\n",
        "\n",
        "if s == '1':\n",
        "  for n in range(1, 21):\n",
        "    print(n)\n",
        "\n",
        "s = input(\"Deseja ver em lista agora? 1 - Sim ou 2 - Não:  \")\n",
        "\n",
        "while s != '1' and s != '2':\n",
        "  print(\"Opção invalida\")\n",
        "  s = input(\"Deseja ver em lista agora ? 1 - Sim ou 2 - Não:  \")\n",
        "\n",
        "if s == '1':\n",
        "  for n in range(1, 21):\n",
        "    print(n, end=\" \")\n"
      ],
      "metadata": {
        "id": "ns_qNgR2zIPJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "93dac327-e9c4-4cfa-a017-211c7ca3d885"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um 1 para começa:  1\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n",
            "11\n",
            "12\n",
            "13\n",
            "14\n",
            "15\n",
            "16\n",
            "17\n",
            "18\n",
            "19\n",
            "20\n",
            "Deseja ver em lista agora? 1 - Sim ou 2 - Não:  1\n",
            "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "7- Faça um programa que leia 5 números e informe o maior número."
      ],
      "metadata": {
        "id": "v7UrGR9MQLnW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "n3 = int(input(\"Digite um numero:  \"))\n",
        "n4 = int(input(\"Digite um numero:  \"))\n",
        "n5 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "maior = n1\n",
        "\n",
        "if n2 > maior:\n",
        "  maior = n2\n",
        "if n3 > maior:\n",
        "  maior = n3\n",
        "if n4 > maior:\n",
        "  maior = n4\n",
        "if n5 > maior:\n",
        "  maior = n5\n",
        "\n",
        "\n",
        "print(\"O maior numero é: \", maior)"
      ],
      "metadata": {
        "id": "MOwOObu6QI5a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "391ae489-4930-41af-f917-350bc7784aa4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  2\n",
            "Digite um numero:  4\n",
            "Digite um numero:  8\n",
            "Digite um numero:  1\n",
            "Digite um numero:  2\n",
            "O maior numero é:  8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "8- Faça um programa que leia 5 números e informe a soma e a média dos números."
      ],
      "metadata": {
        "id": "B-7qr6k3QQsg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "n3 = int(input(\"Digite um numero:  \"))\n",
        "n4 = int(input(\"Digite um numero:  \"))\n",
        "n5 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "soma = n1 + n2 + n3 + n4 + n5\n",
        "media = soma / 5\n",
        "\n",
        "print(\"A soma dos numeros é: \", soma)\n",
        "print(\"A media dos numeros é: \", media)\n"
      ],
      "metadata": {
        "id": "pmJfzKWjQR0-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "264bf2df-3536-41c4-b5d0-c7c232980240"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  2\n",
            "Digite um numero:  2\n",
            "Digite um numero:  2\n",
            "Digite um numero:  2\n",
            "Digite um numero:  2\n",
            "A soma dos numeros é:  10\n",
            "A media dos numeros é:  2.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "9- Faça um programa que imprima na tela apenas os números ímpares entre 1 e 50."
      ],
      "metadata": {
        "id": "nUAFdwiYQU9H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = 1\n",
        "while n <= 50:\n",
        "  if n % 2 != 0:\n",
        "    print(n)\n",
        "  n += 1\n",
        "\n",
        "n = input(\"Quer ver os numero pares? 1-Para sim 2-Para não \")\n",
        "while n != '1':\n",
        "  print(\"Opção invalida\")\n",
        "  n = input(\"Quer ver os numero pares? \")\n",
        "\n",
        "if n == '1':\n",
        "  for n in range(1, 51):\n",
        "    if n % 2 == 0:\n",
        "      print(n)"
      ],
      "metadata": {
        "id": "dttpJpn3QV73",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "41d951ba-aa2b-4166-999f-c7e97de229f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "3\n",
            "5\n",
            "7\n",
            "9\n",
            "11\n",
            "13\n",
            "15\n",
            "17\n",
            "19\n",
            "21\n",
            "23\n",
            "25\n",
            "27\n",
            "29\n",
            "31\n",
            "33\n",
            "35\n",
            "37\n",
            "39\n",
            "41\n",
            "43\n",
            "45\n",
            "47\n",
            "49\n",
            "Quer ver os numero pares? 1-Para sim 2-Para não 1\n",
            "2\n",
            "4\n",
            "6\n",
            "8\n",
            "10\n",
            "12\n",
            "14\n",
            "16\n",
            "18\n",
            "20\n",
            "22\n",
            "24\n",
            "26\n",
            "28\n",
            "30\n",
            "32\n",
            "34\n",
            "36\n",
            "38\n",
            "40\n",
            "42\n",
            "44\n",
            "46\n",
            "48\n",
            "50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "10- Faça um programa que receba dois números inteiros e gere os números inteiros que estão no intervalo compreendido por eles."
      ],
      "metadata": {
        "id": "XMh61ATtQaQ2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "if n < n2:\n",
        "  for n in range(n, n2):\n",
        "    print(n)"
      ],
      "metadata": {
        "id": "ijjW78AqQbRo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2ab77c3d-c222-466c-e6c5-f2838d019b8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  1\n",
            "Digite um numero:  10\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "11- Altere o programa anterior para mostrar no final a soma dos números."
      ],
      "metadata": {
        "id": "5NuReyMRQdmH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "if n < n2:\n",
        "  for n in range(n, n2):\n",
        "    print(n)\n",
        "    soma = n + n2\n",
        "    print(\"A soma dos numeros é: \", soma)"
      ],
      "metadata": {
        "id": "Dw3f5v0dQemp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "12- Desenvolva um gerador de tabuada, capaz de gerar a tabuada de qualquer número inteiro entre 1 a 10. O usuário deve informar de qual numero ele deseja ver a tabuada. A saída deve ser conforme o exemplo abaixo:\n",
        "\n",
        "Tabuada de 5:\n",
        "\n",
        "5 X 1 = 5\n",
        "\n",
        "5 X 2 = 10\n",
        "\n",
        "...\n",
        "\n",
        "5 X 10 = 50"
      ],
      "metadata": {
        "id": "JzSUD3yHQiRW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "for i in range(1, 11):\n",
        "  print(n, \"x\", i, \"=\", n * i)\n"
      ],
      "metadata": {
        "id": "BFDcQCFnQnNo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "749907aa-a804-48c9-e564-421f5735f401"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  5\n",
            "5 x 1 = 5\n",
            "5 x 2 = 10\n",
            "5 x 3 = 15\n",
            "5 x 4 = 20\n",
            "5 x 5 = 25\n",
            "5 x 6 = 30\n",
            "5 x 7 = 35\n",
            "5 x 8 = 40\n",
            "5 x 9 = 45\n",
            "5 x 10 = 50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "13- Faça um programa que peça dois números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. Não utilize a função de potência da linguagem."
      ],
      "metadata": {
        "id": "-LI5xyBNQqq-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "for i in range(1, n2):\n",
        "  potencia = n1 * n2 + n2\n",
        "\n",
        "print(\"A potencia do numero é: \", potencia)"
      ],
      "metadata": {
        "id": "vzAyk0HrQrxn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "82a56e62-032c-4357-cca7-95e7f97865e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  2\n",
            "Digite um numero:  4\n",
            "A potencia do numero é:  12\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "14- Faça um programa que peça 10 números inteiros, calcule e mostre a quantidade de números pares e a quantidade de números ímpares."
      ],
      "metadata": {
        "id": "1S9PEwRLQuEm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = int(input(\"Digite um numero:  \"))\n",
        "n2 = int(input(\"Digite um numero:  \"))\n",
        "n3 = int(input(\"Digite um numero:  \"))\n",
        "n4 = int(input(\"Digite um numero:  \"))\n",
        "n5 = int(input(\"Digite um numero:  \"))\n",
        "n6 = int(input(\"Digite um numero:  \"))\n",
        "n7 = int(input(\"Digite um numero:  \"))\n",
        "n8 = int(input(\"Digite um numero:  \"))\n",
        "n9 = int(input(\"Digite um numero:  \"))\n",
        "n10 = int(input(\"Digite um numero:  \"))\n",
        "\n",
        "soma = n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + n10\n",
        "\n",
        "\n",
        "par = 0\n",
        "impar = 0\n",
        "if n1 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n2 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n3 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n4 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n5 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n6 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n6 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n7 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n8 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n9 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "if n10 % 2 == 0:\n",
        "  par += 1\n",
        "else:\n",
        "  impar += 1\n",
        "\n",
        "print(\"A quantidade de numeros pares é(Sem o 0): \", par - 1)4\n",
        "print(\"A quantidade de numeros pares é(Contado o 0): \", par)\n",
        "print(\"A quantidade de numeros impares é: \", impar)\n",
        "print(\"A soma de todos os numero é: \", soma)"
      ],
      "metadata": {
        "id": "QUkfEm9CQvWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2a88d1d9-b653-4fb7-925e-70db1ded4200"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um numero:  1\n",
            "Digite um numero:  2\n",
            "Digite um numero:  3\n",
            "Digite um numero:  4\n",
            "Digite um numero:  5\n",
            "Digite um numero:  6\n",
            "Digite um numero:  7\n",
            "Digite um numero:  8\n",
            "Digite um numero:  9\n",
            "Digite um numero:  10\n",
            "A quantidade de numeros pares é(Sem o 0):  5\n",
            "A quantidade de numeros pares é(Contado o 0):  6\n",
            "A quantidade de numeros impares é:  5\n",
            " A soma de todos os numero é:  55\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "15- A série de Fibonacci é formada pela sequência 1,1,2,3,5,8,13,21,34,55,... Faça um programa capaz de gerar a série até o n−ésimo termo."
      ],
      "metadata": {
        "id": "jivgY60PQxeX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = 1\n",
        "\n",
        "def fibonnaci(n):\n",
        "  sequencia=[0, 1]\n",
        "  while len(sequencia) < n:\n",
        "    sequencia.append(sequencia[-1] + sequencia[-2])\n",
        "  return sequencia\n",
        "\n",
        "print(fibonnaci(10))"
      ],
      "metadata": {
        "id": "a31HxmdsQyUU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7af16cbf-bdac-4be8-f741-d44846cb16d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n"
          ]
        }
      ]
    }
  ]
}